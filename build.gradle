plugins {
    id "com.jfrog.bintray" version "1.7"
    id "org.sonarqube" version "2.2"
}

apply plugin: 'org.sonarqube'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'maven'

group 'de.mkammerer'
version '2.1-SNAPSHOT'

description 'Argon2 Binding for the JVM'

sourceCompatibility = 1.6
targetCompatibility = 1.6
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'net.java.dev.jna:jna:4.2.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task noLibsJar(type: Jar, dependsOn: javadoc) {
    baseName = project.name + '-nolibs'
    from sourceSets.main.output.classesDir
}

task noLibsSourcesJar(type: Jar, dependsOn: classes) {
    baseName = project.name + '-nolibs'
    classifier = 'sources'
    from sourceSets.main.allJava
}

task noLibsJavadocJar(type: Jar, dependsOn: javadoc) {
    baseName = project.name + '-nolibs'
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives noLibsJar
    archives noLibsSourcesJar
    archives noLibsJavadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

signing {
    sign configurations.archives
    required { gradle.taskGraph.hasTask("uploadArchives") }
}

publishing {
    publications {
        Argon2JvmPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifact noLibsJar
            artifact noLibsSourcesJar
            artifact noLibsJavadocJar
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            pom.project {
                url 'https://github.com/phxql/argon2-jvm'
                licenses {
                    license {
                        name 'GNU LESSER GENERAL PUBLIC LICENSE, Version 3'
                        url 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
                    }
                }
                developers {
                    developer {
                        name 'Moritz Kammerer'
                        email 'kammerer.moritz@gmail.com'
                        organizationUrl 'www.mkammerer.de'
                    }
                }
                scm {
                    connection 'scm:git:git://github.com/phxql/argon2-jvm.git'
                    developerConnection 'scm:git:git://github.com/phxql/argon2-jvm.git'
                    url 'https://github.com/phxql/argon2-jvm'
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['Argon2JvmPublication']
    pkg {
        repo = 'maven'
        name = project.name
        licenses = ['LGPL-3.0']
        vcsUrl = 'https://github.com/phxql/argon2-jvm.git'
        version {
            name = project.version
        }
    }
}
