plugins {
    id "org.sonarqube" version "2.7.1"
}

apply plugin: 'org.sonarqube'
apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'jacoco'

group 'de.mkammerer'
version '2.8-SNAPSHOT'

description 'Argon2 Binding for the JVM'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_6
    targetCompatibility = JavaVersion.VERSION_1_6
}

dependencies {
    implementation 'net.java.dev.jna:jna:5.5.0'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    getArchiveClassifier().set('sources')
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    getArchiveClassifier().set('javadoc')
    from javadoc.destinationDir
}

task noLibsJar(type: Jar, dependsOn: classes) {
    getArchiveAppendix().set('nolibs')
    from sourceSets.main.output.classesDirs

    manifest {
        attributes('Automatic-Module-Name': 'de.mkammerer.argon2')
    }
}

task noLibsSourcesJar(type: Jar, dependsOn: classes) {
    getArchiveAppendix().set('nolibs')
    getArchiveClassifier().set('sources')
    from sourceSets.main.allJava
}

task noLibsJavadocJar(type: Jar, dependsOn: javadoc) {
    getArchiveAppendix().set('nolibs')
    getArchiveClassifier().set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives noLibsJar
    archives noLibsSourcesJar
    archives noLibsJavadocJar
}

jar {
    manifest {
        attributes('Automatic-Module-Name': 'de.mkammerer.argon2')
    }
}

signing {
    sign configurations.archives
    required { gradle.taskGraph.hasTask("uploadArchives") }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
                authentication(userName: project.properties['sonatype.username'], password: project.properties['sonatype.password'])
            }
            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
                authentication(userName: project.properties['sonatype.username'], password: project.properties['sonatype.password'])
            }
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            // default: With included pre-compiled Argon2 libraries
            addFilter('default') { artifact, file ->
                !file.getName().contains('-nolibs')
            }
            // nolibs: Without included pre-compiled Argon2 libraries
            addFilter('nolibs') { artifact, file ->
                file.getName().contains('-nolibs')
            }

            enhancePom(pom('default'))

            // Publish the nolibs version under a different artifact name
            pom('nolibs').artifactId = 'argon2-jvm-nolibs'
            enhancePom(pom('nolibs'))
        }
    }
}

/**
 * Adds license, developer and SCM tags to the POM file.
 * @param pom POM.
 */
void enhancePom(MavenPom pom) {
    pom.project {
        url 'https://github.com/phxql/argon2-jvm'
        name 'Argon2 JVM'
        description 'Argon2 Binding for the JVM'
        licenses {
            license {
                name 'GNU Lesser General Public License, Version 3'
                url 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
            }
        }
        developers {
            developer {
                name 'Moritz Kammerer'
                email 'kammerer.moritz@gmail.com'
                url 'https://www.mkammerer.de/'
            }
        }
        scm {
            connection 'scm:git:git://github.com/phxql/argon2-jvm.git'
            developerConnection 'scm:git:git://github.com/phxql/argon2-jvm.git'
            url 'https://github.com/phxql/argon2-jvm'
        }
    }
}

sonarqube {
    properties {
        property "sonar.exclusions", "src/main/java/de/mkammerer/argon2/jna/*.java"
    }
}
